# Generated by Django 3.2.10 on 2023-03-01 02:22

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='TblActuators',
            fields=[
                ('actuators_id', models.AutoField(primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField()),
                ('exhaust_fan', models.IntegerField()),
                ('evaporator_cooler', models.IntegerField()),
                ('greenhouse_light', models.IntegerField()),
                ('warmer_lamps', models.IntegerField()),
                ('ac_motors', models.IntegerField()),
                ('water_pump', models.IntegerField()),
                ('aeration_pump', models.IntegerField()),
                ('automatic_baiting_system', models.IntegerField()),
                ('water_heater', models.IntegerField()),
                ('water_aerator', models.IntegerField()),
                ('water_blender', models.IntegerField()),
                ('solenoid_valve_1', models.IntegerField()),
                ('solenoid_valve_2', models.IntegerField()),
                ('solenoid_valve_3', models.IntegerField()),
                ('solenoid_valve_4', models.IntegerField()),
            ],
            options={
                'db_table': 'tbl_actuators',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TblFishData',
            fields=[
                ('fd_id', models.AutoField(primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField()),
                ('fish_width', models.FloatField()),
                ('fish_height', models.FloatField()),
                ('fish_weight', models.FloatField()),
            ],
            options={
                'db_table': 'tbl_fish_data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TblGreenhouse',
            fields=[
                ('greenhouse_id', models.AutoField(primary_key=True, serialize=False)),
                ('location', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'tbl_greenhouse',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TblGreenhouseMonitoring',
            fields=[
                ('gm_id', models.AutoField(primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField()),
                ('air_temperature', models.FloatField()),
                ('relative_humidity', models.FloatField()),
                ('co2_level', models.FloatField()),
                ('intensity_illumination', models.FloatField()),
            ],
            options={
                'db_table': 'tbl_greenhouse_monitoring',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TblPlantData',
            fields=[
                ('pd_id', models.AutoField(primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField()),
                ('plant_health', models.IntegerField()),
            ],
            options={
                'db_table': 'tbl_plant_data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TblUserData',
            fields=[
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(blank=True, max_length=25, null=True)),
                ('password', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tbl_user_data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TblWaterBiofilter',
            fields=[
                ('wbf_id', models.AutoField(primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField()),
                ('nitrite', models.FloatField()),
                ('nitrate', models.FloatField()),
                ('ammonia', models.FloatField()),
            ],
            options={
                'db_table': 'tbl_water_biofilter',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TblWaterSensingtank',
            fields=[
                ('wst_id', models.AutoField(primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField()),
                ('ph_level', models.FloatField()),
                ('water_temperature', models.FloatField()),
                ('elec_conductivity', models.FloatField()),
                ('total_dissolved_solids', models.FloatField()),
            ],
            options={
                'db_table': 'tbl_water_sensingtank',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TblWaterTestbed',
            fields=[
                ('wtb_id', models.AutoField(primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField()),
                ('ph_level', models.FloatField()),
                ('water_temperature', models.FloatField()),
                ('dissolved_o2_level', models.FloatField()),
                ('elec_conductivity', models.FloatField()),
                ('total_dissolved_solids', models.FloatField()),
                ('nitrite', models.FloatField()),
                ('nitrate', models.FloatField()),
                ('ammonia', models.FloatField()),
            ],
            options={
                'db_table': 'tbl_water_testbed',
                'managed': False,
            },
        ),
    ]
